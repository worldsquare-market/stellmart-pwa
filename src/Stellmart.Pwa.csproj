<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="Client\typings.d.ts" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="3.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.0.6" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="2.0.3" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="2.0.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="2.0.2" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.0.0" />
    <PackageReference Include="NUnit" Version="3.10.1" />
    <PackageReference Include="stellar-dotnetcore-sdk" Version="1.0.3" />
    <PackageReference Include="WebEssentials.AspNetCore.ServiceWorker" Version="1.0.11" />
    <PackageReference Include="WindowsAzure.Storage" Version="9.1.0" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.0" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Client\components\navmenu\" />
    <Folder Include="wwwroot\dist\" />
  </ItemGroup>

  <ItemGroup>
    <None Include="Views\Startup\Index.cshtml" />
    <None Include="wwwroot\assets\favicon.ico" />
    <None Include="wwwroot\assets\icons\android-chrome-192x192.png" />
    <None Include="wwwroot\assets\icons\android-chrome-512x512.png" />
    <None Include="wwwroot\assets\icons\apple-touch-icon.png" />
    <None Include="wwwroot\assets\icons\favicon-16x16.png" />
    <None Include="wwwroot\assets\icons\favicon-32x32.png" />
    <None Include="wwwroot\assets\icons\mstile-150x150.png" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="Client\routes.tsx" />
    <TypeScriptCompile Include="Client\typings.d.ts" />
  </ItemGroup>


  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Command="npm install" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.js --env.prod" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --env.prod" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="Client\wwwroot\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>